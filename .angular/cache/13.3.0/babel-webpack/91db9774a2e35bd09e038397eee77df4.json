{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, snackBar) {\n      this.http = http;\n      this.snackBar = snackBar;\n      this.serviceUrl = 'https://dummyjson.com/users';\n    }\n\n    getUsers() {\n      return this.http.get(this.serviceUrl).pipe(map(data => data.users));\n    }\n\n    openSnackBar(message, action) {\n      this.snackBar.open(message, action, {\n        duration: 5000,\n        verticalPosition: 'bottom' // panelClass: [\"font-family:'Open Sans', sans-serif;\"]\n\n      });\n    }\n\n    updateUser(user) {\n      return this.http.patch(`${this.serviceUrl}/${user.id}`, user);\n    }\n\n    addUser(user) {\n      return this.http.post(`${this.serviceUrl}/add`, user);\n    }\n\n    deleteUser(id) {\n      return this.http.delete(`${this.serviceUrl}/${id}`);\n    }\n\n    deleteUsers(users) {\n      return forkJoin(users.map(user => this.http.delete(`${this.serviceUrl}/${user.id}`)));\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MatSnackBar));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}